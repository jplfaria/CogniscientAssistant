# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

from . import types
from . import stream_types


type_map = {

    "types.AgentRequest": types.AgentRequest,
    "stream_types.AgentRequest": stream_types.AgentRequest,

    "types.AgentResponse": types.AgentResponse,
    "stream_types.AgentResponse": stream_types.AgentResponse,

    "types.AssumptionDecomposition": types.AssumptionDecomposition,
    "stream_types.AssumptionDecomposition": stream_types.AssumptionDecomposition,

    "types.Citation": types.Citation,
    "stream_types.Citation": stream_types.Citation,

    "types.ComparisonResult": types.ComparisonResult,
    "stream_types.ComparisonResult": stream_types.ComparisonResult,

    "types.ErrorInfo": types.ErrorInfo,
    "stream_types.ErrorInfo": stream_types.ErrorInfo,

    "types.ExperimentalProtocol": types.ExperimentalProtocol,
    "stream_types.ExperimentalProtocol": stream_types.ExperimentalProtocol,

    "types.FailurePoint": types.FailurePoint,
    "stream_types.FailurePoint": stream_types.FailurePoint,

    "types.Hypothesis": types.Hypothesis,
    "stream_types.Hypothesis": stream_types.Hypothesis,

    "types.HypothesisSummary": types.HypothesisSummary,
    "stream_types.HypothesisSummary": stream_types.HypothesisSummary,

    "types.ParsedResearchGoal": types.ParsedResearchGoal,
    "stream_types.ParsedResearchGoal": stream_types.ParsedResearchGoal,

    "types.RequestContent": types.RequestContent,
    "stream_types.RequestContent": stream_types.RequestContent,

    "types.ResearchPatterns": types.ResearchPatterns,
    "stream_types.ResearchPatterns": stream_types.ResearchPatterns,

    "types.ResponseData": types.ResponseData,
    "stream_types.ResponseData": stream_types.ResponseData,

    "types.Review": types.Review,
    "stream_types.Review": stream_types.Review,

    "types.ReviewScores": types.ReviewScores,
    "stream_types.ReviewScores": stream_types.ReviewScores,

    "types.SafetyCheck": types.SafetyCheck,
    "stream_types.SafetyCheck": stream_types.SafetyCheck,

    "types.SimilarityScore": types.SimilarityScore,
    "stream_types.SimilarityScore": stream_types.SimilarityScore,

    "types.SimulationResults": types.SimulationResults,
    "stream_types.SimulationResults": stream_types.SimulationResults,

    "types.Task": types.Task,
    "stream_types.Task": stream_types.Task,


    "types.AgentType": types.AgentType,

    "types.ConfidenceLevel": types.ConfidenceLevel,

    "types.Criticality": types.Criticality,

    "types.HypothesisCategory": types.HypothesisCategory,

    "types.RequestType": types.RequestType,

    "types.ResponseStatus": types.ResponseStatus,

    "types.ReviewDecision": types.ReviewDecision,

    "types.ReviewType": types.ReviewType,

    "types.SafetyCategory": types.SafetyCategory,

    "types.SafetyLevel": types.SafetyLevel,

    "types.TaskState": types.TaskState,

    "types.TaskType": types.TaskType,

    "types.Validity": types.Validity,

}